@page "/"

@using Question4.Services
@using Question4.Data
@inject INewsService NewsService

<MudMainContent>
    <MudContainer MaxWidth="MaxWidth.Medium">
        @if (newItems == null)
        {
            <MudProgressCircular Color="Color.Default" Indeterminate="true" />
        }
        else
        {

            @foreach (var newsItem in newItems)
            {
                <MudCard Outlined="true">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.caption">@newsItem.Source - @newsItem.Date.ToShortDateString()</MudText>
                            <MudText Typo="Typo.h6">@newsItem.Headline</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudChip Color="Color.Primary">@newsItem.RelevanceScore</MudChip>                            
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText Typo="Typo.body1">@newsItem.Text</MudText>
                        <MudText Typo="Typo.body2">@string.Join(" ",newsItem.Tags.Select(x => $"#{x.Replace(" ","").ToLower()}"))
                            </MudText>
                    </MudCardContent>
                </MudCard>
            }
        }
    </MudContainer>
</MudMainContent>


@code {
    private IEnumerable<NewsItem> newItems;

    protected override async Task OnInitializedAsync()
    {
        newItems = await NewsService.GetNewsEventsAsync();
    }

}
